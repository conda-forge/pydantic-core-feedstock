schema_version: 1

context:
  name: pydantic-core
  version: "2.41.3"

package:
  name: ${{ name }}
  version: ${{ version }}

source:
  url: https://files.pythonhosted.org/packages/00/e9/3916abb671bffb00845408c604ff03480dc8dc273310d8268547a37be0fb/pydantic_core-${{ version }}.tar.gz
  sha256: cdebb34b36ad05e8d77b4e797ad38a2a775c2a07a8fa386d4f6943b7778dcd39

build:
  number: 0
  script:
    - if: unix
      then:
        - export CARGO_PROFILE_RELEASE_STRIP=symbols
        - export CARGO_PROFILE_RELEASE_LTO=fat
    - if: win
      then:
        - set CARGO_PROFILE_RELEASE_STRIP=symbols
        - set CARGO_PROFILE_RELEASE_LTO=fat
    - if: build_platform != target_platform and unix and python is startingwith('3.14')
      then:
        - rm -f $PREFIX/lib/python3.14/build-details.json
    - python -m pip install . -vv
    - cargo-bundle-licenses --format yaml --output THIRDPARTY.yml

requirements:
  build:
    - if: build_platform != target_platform
      then:
        - python
        - cross-python_${{ target_platform }}
        - maturin >=1,<2
    - ${{ compiler("c") }}
    - ${{ stdlib("c") }}
    - ${{ compiler("rust") }}
    - cargo-bundle-licenses
  host:
    - pip
    - python
    - maturin >=1,<2
    - typing-extensions >=4.6.0,!=4.7.0
  run:
    - python
    - typing-extensions >=4.6.0,!=4.7.0

tests:
  - python:
      imports:
        - pydantic_core
  - requirements:
      run:
        - pip
    script:
      - pip check
      - python -c "from pydantic_core import PydanticUndefinedType"

about:
  summary: Core validation logic for pydantic written in rust
  license: MIT
  license_file:
    - LICENSE
    - THIRDPARTY.yml
  homepage: https://github.com/pydantic/pydantic-core
  repository: https://github.com/pydantic/pydantic-core

extra:
  recipe-maintainers:
    - xhochy
    - samuelcolvin
    - adriangb
    - dmontagu
    - pavelzw
